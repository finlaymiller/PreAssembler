	 ;
	 ; Sample Emulated Instruction Input Examples
	 ;
	 ; This file contains examples of input records to the pre-assembler and what
	 ; the pre-assembler's output should be. A new assembler file containing the
	 ; modified and unmodified records will need to be created by the
	 ; pre-assembler. The order of records (modifed and unmodified) supplied in
	 ; the input file should not be changed by the pre-assembler
	 ;
	 ; L. Hughes
	 ; 23 May 2018 - EQUs removed
	 ; 16 May 2018
	 ;
	 ; This example assumes that the X-Makina emulated instructions do not make
	 ; reference to PSW, SP, PC, and LR.
	 ;
 org #$100	 ; Unchanged by pre-assembler
	 ;
MOV R6,R6	 ; Output to new assembler file should be MOV PSW,PSW
	 ;
	 ; Emulated instructions are case insensitive
	 ; Output to new assembler file should be BL SUBR in all cases:
	 ;
BL SUBR
BL SUBR
BL SUBR
	 ;
ST R3,-R5	 ; Output to new assembler file should be ST R3,-SP
	 ;
BIC #2,R6 	 ; Output to new assembler file should be BIC #2,PSW
	 ;
 MOVL SUBR,R0	 ; Output to new assembler file should be unchanged
 MOVH SUBR,R0	 ; Output to new assembler file should be unchanged
	 ;
MOV R0,R7	 ; Output to new assembler file should be MOV R0,PC
MOV R3,R7	 ; Output to new assembler file should be MOV R3,PC
	 ;
 ADD R1,R2	 ; Output to new assembler file should be unchanged
	 ;
	 ; The following three records should all produce SUBC.x #0,R3
	 ; There are ways of quickly determining where ".x" is omitted or one
	 ; of ".w" or ".b":
	 ;
SUBC #0,R3	 ; Output to new assembler file should be SUBC #0,R3
SUBC.W #0,R3	 ; Output to new assembler file should be SUBC.W #0,R3
SUBC.B #0,R3	 ; Output to new assembler file should be SUBC.B #0,R3
	 ;
	 ; The emulated instruction should be treated as reserved words. If the input file includes
	 ; emulated instructions used incorrectly, the pre-assembler should "do the best it can" and
	 ; write the result to the new output file.
	 ;
MOV LABEL,R7	 ; Output to new assembler file should be MOV LABEL,PC
	 ;
	 ; In this case, CALL is used as a operand for the XMakina instruction branch always:
	 ; The pre-assembler can either (a design decision you will need to take):
	 ;
	 ; 1. Output "bal BL" to the assembler (which will generate an assembler diagnostic)
	 ; 2. Output a diagnostic, indicating that CALL does not have an operand
	 ;
BL  bal
	 ;
	 ; If CALL did have an operand, the pre-assembler would be expected to generate the
	 ; correct instruction. In this case, the output to new assembler file should be (the
	 ; assembler should generate a diagnostic):
	 ; "bal BL SUBR"
	 ;
BL SUBR bal
	 ;
	 ; If an invalid X-Makina instruction or operand, or both are supplied, they should be
	 ; ignored. Finding this error is the responsibility of the assembler:
	 ;
 LOOP GoTo LOOP2	 ; Write this record to the output file changed
	 ;
	 ; In the above sample code, neither SUBR nor LABEL have been declared. It is not the
	 ; responsibility of the pre-assembler to find these errors -- the assembler should find them.
	 ;
 END
